Agenda - 
https://www.devopsschool.com/courses/git/git-intermediate-training.html
What is Git?
	Source Control mgt tool
	Open Source
	Version control system
	Free
	----------------
	Main - Distributed
	----------------
	From Linus Tovarld
	Compt with all Plat
Why
-----------------------------

		WHO	
		WHERE
		WHY
		WHEN
		WHAT
	

	------------------
	intelligent file system
	------------------
	---
	Repository
	Web


	What is DISTRIBUTED?

SERVER-CLIENT				DISTRIBUTED MODEL
===================================================================
ONE REPO AT SERVER
MULTIPLE CLIENT


Other tools
-------------------------------------------
RCS -> CVS -> SVN
Mercury | SVN | Bitkeeper | ClearCase | Perforce

-----------------------
How to install git?
	RHEL/CENTOS - sudo yum install git
	UB+F - sudo apt-get install git
	
	Mac - DMG package 
	git-scm.com
	
	windows - exe package
	git-scm.com
		- git-cmd
		- git-bash =====
		- gitk
	GIT GUI Client
		sourcetree from Atlassion
		tortoisegit
	
https://www.devopsschool.com/notes/git/2019/

---------------------------------------------
		WORKFLOW IN GIT

Step - 1 = Create a repo
$ git init

Step - 2 = Create a file using EDITOR

Step - 3 = Add a file to git[Working dir to staging area]
$ git add filename

ONE TIME ONLY
-----------------
git config user.name "Rajesh Kumar"
git config user.email "DevOps@RajeshKumar.xyz"
git config --list
-----------------

Step - 4 = Commit a file to git [ Staging area to Repo]
$ git commit -m"adding a file file1"

Step - 5 = See a commits
$ git log

Step - 6 = See what was committed?
$ git show bd6d7063607f4fc04f7a528c3c1ed0d2334c85a7

$ git log
commit bd6d7063607f4fc04f7a528c3c1ed0d2334c85a7 (HEAD -> master)
Author: Rajesh Kumar <DevOps@RajeshKumar.xyz>
Date:   Tue May 14 11:07:42 2019 +0530

    adding a file file1

What is bd6d7063607f4fc04f7a528c3c1ed0d2334c85a7?
CHECKSUM/COMMITID CREATED BY SHA1 Al - HASH VALUE
	Reprsenta a OBJECTS(chaged file system)

Questions
=============
==============================
How to see which file is in 
				Working dir?
				Staging area?
$ git status

How to modify already exisitng file?		- DONE


How to track a commit id? How to get back to see the changes in old commit id?

 535  clear
  536  git status
  537  git add file2.txt
  538  git status
  539  git add .
  540  git status
  541  git commit -m"adding file2 only" file2.txt
  542  git status
  543  git commit -m"commit all"
  544  git status
  545  clear
  546  git status
  547  ls
  548  vi file1.txt
  549  git status
  550  git add .
  551  git status
  552  git commit -m"adding existing file"
  553  history

How to add directory?
  555  ls
  556  mkdir src
  557  git status
  558  touch src/code1.txt
  559  git status
  560  git add .
  561  git status
  562  git commit -m"adding a dir"
  563  git status

How to rename and move a files / dir?
  567  git status
  568  ls
  569  git mv file1.txt file11.txt
  570  git status
  571  git mv file2.txt src/
  572  git status
  573  git commit -m"moving and committing"
  574  git status
  575  ls
  576  ls src/
  577  history


How to delete a file?
  589  ls
  590  git log
  591  git log --oneline
  592  git checkout 2e22fb6
  593  ls
  594  git log --oneline
  595  git checkout master
  596  git log --oneline
  597  git rm file4.txt
  598  git status
  599  git commit -m"deleting a file4"
  600  git status
  601  ls
  602  git log --oneline



What is HEAD?
	HEAD IS A TIP OF THE CURRENT BRANCH?

Updating a commit done already
------------
$ git log --oneline
5524252 (HEAD -> master) ading file5
a370d1b deleting a file4
686944d adding a file4
2e22fb6 moving and committing
8ace9db adding a dir
0a5039d adding existing file
7666c5f commit all
f9c1a5a adding file2 only
bd6d706 adding a file file1

 604  clear
  605  git log --oneline
  606  ls
  607  touch file5.txt;git add .;git commit -m"ading file5"
  608  ls
  609  git log --oneline
  610  vi file5.txt
  611  git status
  612  git add .
  613  git amend
  614  git commit --amend
  615  git log --oneline
  616  history

=====================
UNDOING
====================
1. How to get rid of file from working dir?
2. How can you move a file from staging to working dir?
3. How can you undo in REPO?
 617  clear
  618  git status
  619  ls
  620  touch file6.txt
  621  git status
  622  git clean -f -d
  623  git status
  624  touch file6.txt
  625  git add .
  626  git status
  627  git reset file6.txt
  628  git status
  629  git clean -f -d
  630  clear
  631  git status
  632  touch good.txt;git add .;git commit -m"adding good"
  633  touch bad.txt;git add .;git commit -m"adding bad"
  634  git log --oneline
  635  git revert 1687a09
  636  git log --oneline
  637  git diff 2bf66a9 1687a09
  638  git diff 2bf66a9 cd11033
  639  history

=====================================================
=====================================================


Master Repo
	GUI
	Issue tracking
	Code Review
	Manage multiple Repo
	Enterprise Friendsly
		Github ==== 80%
		Bitbucket
		Gitlab
		AWS
		GC
		AZURE
=======================
https://github.com/
	- Reegister using email
	- verify
	- Create repo

  639  history
  640  git push https://github.com/devopsinstitute/symphonyai.git master
  641  ls
  642  git pull origin master
  643  git remote add origin https://github.com/devopsinstitute/symphonyai.git
  644  git pull origin master
  645  ls
  646  history


 504  git clone https://github.com/devopsinstitute/symphonyai.git
  505  clear
  506  ls
  507  ls
  508  cd symphonyai/
  509  clear
  510  git log --oneline
  511  touch y1.txt;git add .;git commit -m"adding y1"
  512  git config user.name "Rajesh Y"
  513  git config user.email "Rajeshy@y.com"
  514  touch y1.txt;git add .;git commit -m"adding y1"
  515  git push origin master
  516  history

===========================================================
Git branching...
----------------------------
3 kinds of git branch you see.....
	Local	- READ - WRITE
	Remote  - READ ONLY & Copy of same branch of REMOTE Repo
	TEMP	- READ / WRITE but can be ORPHAN when you do not convert to Local


Git init bare type
----------------------------
git init --bare

Git Push Vs Pull vs Fetch
------------------------
git pull  = git fetch + git merge
	




Branching and Merging Strategy
================================================
================================================
Local
Remote 
Tempo == Deattached branch
=============================
https://docs.microsoft.com/en-us/azure/devops/repos/tfvc/branching-strategies-with-tfvc?view=azure-devops

 528  git checkout master
  529  git branch fea1
  530  git branch
  531  ls
  532  git fea1
  533  clear
  534  git checkout fea1
  535  git branch
  536  ls
  537  touch fea1.txt
  538  git status
  539  git checkout master
  540  git status
  541  git add fea1.txt
  542  git checkout fea1
  543  git status
  544  git commit -m"adding fea1"
  545  ls
  546  git checkout master
  547  ls
  548  clear
  549  l
  550  git diff fea1
  551  gitk
  552  git checkout fea1
  553  gitk
  554  clear
  555  ls
  556  git checkout -b fea11
  557  ls
  558  git checkout master
  559  ls
  560  history

-----How to merge 2 Branches?----------------------------------------
- Fast Forward Merge
- 3-Way merge == recursive merge
- Cherry-picking...
-----------------------------------

FAST FORWARD MERGE
  561  clear
  562  git log --oneline
  563  git checkout fea1
  564  git log --oneli
  565  git log --oneline
  566  clear
  567  touch fea11.txt;git add .;git commit -m"adding fea11"
  568  touch fea111.txt;git add .;git commit -m"adding fea111"
  569  git log --oneline
  570  clear
  571  git merge master
  572  git checkout master
  573  git merge fea1
  574  history

- 3-Way merge == recursive merge

  576  touch m1.txt; git add .;git commit -m"m1"
  577  git checkout fea1
  578  touch f1.txt; git add .;git commit -m"f1"
  579  touch f2.txt; git add .;git commit -m"f2"
  580  git checkout master
  581  touch m2.txt; git add .;git commit -m"m2"
  582  touch m3.txt; git add .;git commit -m"m3"
  583  git checkout fea1
  584  touch f3.txt; git add .;git commit -m"f3"
  585  touch f4.txt; git add .;git commit -m"f4"

Rajesh@DESKTOP-ST1GLH0 MINGW64 /d/web/user2 (fea1)
$ git log --oneline
26292fd (HEAD -> fea1) f4
e935d8e f3
dca954f f2
3308cc7 f1
9c67ac2 adding fea111
47b1b5b adding fea11
bb98dea (fea11) adding fea1
c841396 (origin/master, origin/HEAD, temp1) adding user1

Rajesh@DESKTOP-ST1GLH0 MINGW64 /d/web/user2 (master)
$ git log --oneline
cb5ea8c (HEAD -> master) m3
f0c1a5c m2
a2c98e1 m1
9c67ac2 adding fea111
47b1b5b adding fea11
bb98dea (fea11) adding fea1


Cherry Pick
-----------------------------------------
 585  touch f4.txt; git add .;git commit -m"f4"
  586  hsitory
  587  history
  588  git log --oneline
  589  clear
  590  git checkout master
  591  git log --oneline
  592  clear
  593  git merge fea1
  594  git log --oneline
  595  git show aa3326b
  596  clea
  597  clear
  598  git checkout -b cherry
  599  touch cherry1.txt;git add .;git commit -m"adding cherry1"
  600  touch cherry2.txt;git add .;git commit -m"adding cherry2"
  601  touch cherry3.txt;git add .;git commit -m"adding cherry3"
  602  git log --oneline
  603  touch cherry4.txt;git add .;git commit -m"adding cherry4"
  604  git log --oneline
  605  git checkout master
  606  git cherry-pick 845e008
  607  ls
  608  git checkout cherry
  609  git log --oneline
  610  clear
  611  ls
  612  vi cherry5.txt
  613  vi cherry5.txt
  614  git add .;git commit -m"cherry5 line1"
  615  vi cherry5.txt
  616  git add .;git commit -m"cherry5 line2"
  617  vi cherry5.txt
  618  git add .;git commit -m"cherry5 line3"
  619  vi cherry5.txt
  620  git add .;git commit -m"cherry5 line4"
  621  git log --oneline
  622  git checkout master
  623  git status
  624  git cherry-pick 9fdfee5
  625  git status
  626  git add .
  627  git status
  628  cat cherry5.txt
  629  git commit -m"adding cherry pick conflict"
  630  history

=============================================
How to resolve a conflict?
 631  clear
  632  ls
  633  vi cherry2.txt
  634  git add .;git commit -m"add"
  635  git checkout fea1
  636  ls
  637  git checkout cherry
  638  ls
  639  clear
  640  vi cherry2.txt
  641  git add .;git commit -m"add"
  642  git checkout master
  643  git merge cherry
  644  git status
  645  vi cherry2.txt
  646  vi cherry5.txt
  647  git add .
  648  git status
  649  git commit -m"resolve"
  650  git status
  651  git merge cherry
  652  history



SAME FILE NAME === SAME LINE NUMBER
method(param1,param2)		method(param1,param2,param3)

How to compare a commits?
How to compare a workspace and repo?
How to compare a 2 branches


git config
----------------------------------
git log --pretty=oneline --graph --decorate --all

git config alias.gr1 "log --pretty=oneline --graph --decorate --all"

git gr1

 653  clear
  654  git config --system user.name "Rajesh System"
  655  git config --global user.name "Rajesh System"
  656  git config --global user.name "Rajesh Global"
  657  git config --system --list
  658  git config --global --list
  659  git config user.name "Rajesh Repo"
  660  cd .git/
  661  start .
  662  clear
  663  cd ..
  664  ls
  665  clear
  666  git log --pretty=oneline --graph --decorate --all
  667  clear
  668  git config alias.gr1 "log --pretty=oneline --graph --decorate --all"
  669  git gr1
  670  history


What are commit is done over the file?
What are the commits done in the directory?
Searching a file in repo
Seeing a log by date | authors...

Searching a file

Seeing a commit for a day or cond
Branching and Conflict mgmt
======================================================
GIT GUI
https://git-scm.com/download/gui/windows

How to compare 2 files in 2 branches?
git diff mybranch master -- myfile.cs
git diff mybranch master -- myfile.cs
git diff mybranch..master -- myfile.cs

git diff --no-index cherry1.txt cherry4.txt
git diff cherry1.txt cherry4.txt
=======================================================
git help
git help command

Git ignoring
-----------------------------
  700  ls
  701  mkdir build
  702  touch build/sddfsf
  703  touch build/sddfsffsdfdsf
  704  touch build/sddfsffsdfdsffsdf
  705  clear
  706  git status
  707  vi .gitignore
  708  git status
  709  vi .gitignore
  710  git status
  711  history


Git stash 
=======================
 712  clear
  713  git status
  714  ls
  715  vi cherry3.txt
  716  vi f3.txt
  717  git add f3.txt
  718  vi file3.txt
  719  git status
  720  git stash --list
  721  git stash list
  722  git stash
  723  git stash list
  724  git status
  725  clear
  726  ls
  727  vi m1.txt
  728  git add .;git commit -m"add m1"
  729  git status
  730  git stash list
  731  git apply
  732  git stash apply stash@{0}
  733  git status
  734  git stash
  735* git stash list1
  736  git help stash
  737  history
--------------------------------------
Git tag
  740  git log --oneline -n 2
  741  git tag --list
  742  git tag rel1.0-fd464c4
  743  git tag --list
  744  git help tag
  745  git tag -a v1.2 2acd9ef -m "Message here"
  746  git tag --list
  747  git branch -r
  748  git branch -a
  749  git push origin fea1
  750  git push origin v1.2
  751  git tag -d v1.2
  752  git tag --list
  753  history

=====================================
SSH KEY
$ cd
$ ssh-keygen

==============================
Anatomy of GIT internal

Git patch sets


Reset


Rebase



test

SourceTree




git porcelain vs plumbing
==================================


How to get Course Materials  Sldies  Notes
------------------------------------

How can you reach to me?
http://rajeshkumar.xyz/

Training Certification
http://devopscertification.co/

feedback



















